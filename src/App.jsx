// src/App.jsx
import { useMemo, useState } from "react";
import "./styles.css"; // ุฃู ุจุฏูููุง ููุงุณู ุงูุตุญูุญ ุนูุฏู





// ุจูุงูุงุช ุงูููุชุฌุงุช
const PRODUCTS = [
  { id: "netflix_uhd", name: "Netflix UHD", duration: "30 ููู", price: 6.99 },
  { id: "spotify_premium", name: "Spotify Premium", duration: "30 ููู", price: 3.49 },
  { id: "iptv_m3u", name: "IPTV M3U", duration: "30 ููู", price: 4.99 },
];

// (ุจุฏู ProductCard.jsx)
function ProductCard({ item, onSelect }) {
  return (
    <div className="card">
      <div className="card-title">{item.name}</div>
      <div className="card-sub">{item.duration}</div>
      <div className="card-price">{item.price.toFixed(2)} $</div>
      <button onClick={() => onSelect(item)} className="btn">ุงุฎุชูุงุฑ</button>
    </div>
  );
}

// (ุจุฏู CheckoutForm.jsx)
const ADMIN_PHONE = import.meta.env.VITE_ADMIN_PHONE || "+22234605765";
function CheckoutForm({ selected, onBack }) {
  const [form, setForm] = useState({ fullName: "", whatsapp: "", email: "", notes: "" });
  const [agree, setAgree] = useState(true);

  const msg = useMemo(() => {
    if (!selected) return "";
    return [
      "๐ *ุทูุจ ุงุดุชุฑุงู ุฌุฏูุฏ*",
      `โข ุงูููุชุฌ: ${selected.name}`,
      `โข ุงููุฏุฉ: ${selected.duration}`,
      `โข ุงูุณุนุฑ: ${selected.price.toFixed(2)} $`,
      "โ โ โ",
      `โข ุงูุงุณู: ${form.fullName || "-"}`,
      `โข ูุงุชุณุงุจ ุงูุนููู: ${form.whatsapp || "-"}`,
      `โข ุงูุจุฑูุฏ: ${form.email || "-"}`,
      `โข ููุงุญุธุงุช: ${form.notes || "-"}`,
      `โข ููุช ุงูุฅุฑุณุงู: ${new Date().toLocaleString()}`,
    ].join("\n");
  }, [selected, form]);

  function openWhatsApp() {
    const enc = encodeURIComponent(msg);
    const appUrl = `whatsapp://send?phone=${ADMIN_PHONE}&text=${enc}`;
    const webUrl = `https://wa.me/${ADMIN_PHONE}?text=${enc}`;
    const iframe = document.createElement("iframe");
    iframe.style.display = "none";
    iframe.src = appUrl;
    document.body.appendChild(iframe);
    setTimeout(() => {
      window.location.href = webUrl;
      document.body.removeChild(iframe);
    }, 700);
  }

  function handleSubmit(e) {
    e.preventDefault();
    if (!selected) return;
    if (!form.fullName || !form.whatsapp) return alert("ุฑุฌุงุกู ุฃุฏุฎู ุงูุงุณู ูุฑูู ูุงุชุณุงุจ.");
    if (!agree) return alert("ุฑุฌุงุกู ูุงูู ุนูู ุงูุดุฑูุท.");
    openWhatsApp();
  }

  return (
    <form className="form" onSubmit={handleSubmit}>
      <h3>ุชุฃููุฏ ุงูุทูุจ: {selected?.name}</h3>

      <label>ุงูุงุณู ุงููุงูู
        <input value={form.fullName} onChange={e=>setForm(f=>({...f, fullName:e.target.value}))} required/>
      </label>

      <label>ุฑูู ูุงุชุณุงุจ (ูุน ููุฏ ุงูุฏููุฉ)
        <input value={form.whatsapp} onChange={e=>setForm(f=>({...f, whatsapp:e.target.value}))} required/>
      </label>

      <label>ุงูุจุฑูุฏ ุงูุฅููุชุฑููู (ุงุฎุชูุงุฑู)
        <input type="email" value={form.email} onChange={e=>setForm(f=>({...f, email:e.target.value}))}/>
      </label>

      <label>ููุงุญุธุงุช
        <textarea rows={3} value={form.notes} onChange={e=>setForm(f=>({...f, notes:e.target.value}))}/>
      </label>

      <label className="agree">
        <input type="checkbox" checked={agree} onChange={e=>setAgree(e.target.checked)} />
        ุฃูุงูู ุนูู ุงูุดุฑูุท ูุณูุงุณุฉ ุงูุฎุตูุตูุฉ
      </label>

      <div className="row">
        <button type="button" className="btn ghost" onClick={onBack}>ุฑุฌูุน</button>
        <button type="submit" className="btn">ุฅุฑุณุงู ุนุจุฑ ูุงุชุณุงุจ</button>
      </div>

      <p className="hint">ุณูุชู ูุชุญ ูุงุชุณุงุจ ูุน ุฑุณุงูุฉ ุฌุงูุฒุฉ โ ุงุถุบุท โุฅุฑุณุงูโ.</p>
    </form>
  );
}

export default function App() {
  const [selected, setSelected] = useState(null);
  return (
    <div className="container">
      <header className="head">
        <h1>ุงุดุชุฑุงูุงุช ุฑูููุฉ</h1>
        <p>ุงุฎุชุฑ ุงูููุชุฌ ูุงุฑุณูู ุงูุทูุจ ุนุจุฑ ูุงุชุณุงุจ.</p>
      </header>

      {!selected ? (
        <div className="grid">
          {PRODUCTS.map((p) => (
            <ProductCard key={p.id} item={p} onSelect={setSelected} />
          ))}
        </div>
      ) : (
        <CheckoutForm selected={selected} onBack={() => setSelected(null)} />
      )}

      <footer className="foot">ยฉ {new Date().getFullYear()} ูุชุฌุฑู</footer>
    </div>
  );
}
